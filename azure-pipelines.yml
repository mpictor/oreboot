trigger:
- master

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight (UTC) build
  branches:
    include:
    - master
  always: true

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: QVER
  value: 5.1.0

steps:
- script: |
    make ciprepare
  displayName: 'Install Rust Dependencies'
- script: |
    make --keep-going format check=true
  displayName: 'Check formatting'
- script: |
    make --keep-going test
  displayName: 'Run rust tests'
- script: |
    make --keep-going clippy
  displayName: 'Run clippy linter'
- script: |
    make --keep-going mainboards
  displayName: 'Build all mainboards'
- script: |
    ./scripts/generate-size-report.sh
  displayName: 'Generate report of binary sizes'
- script: |
    cd src/mainboard/sifive/hifive
    PAYLOAD_A=../../../../payloads/src/external/simple/testtesttest make
  displayName: 'Build SiFive board for RISC-V'
- script: |
    cd src/mainboard/emulation/qemu-riscv
    make
  displayName: 'Build QEMU virt board for RISC-V'
- script: |
    cd src/mainboard/emulation/qemu-q35
    make
  displayName: 'Build QEMU q35 board for x86'
- task: Cache@2
  inputs:
    # Note that caches are immutable. To change, use a different name (e.g. qemu-bins2-...) or
    # update QVER. Cache expires after 7 days of no use.
    key: 'qemu-bin-v${{ variables.QVER }}'
    path: $(Pipeline.Workspace)/qemu-${{ variables.QVER }}-bin.tar.xz
    cacheHitVar: QEMU_CACHE_RESTORED
  displayName: Get QEMU cache
- script: |
    set -e
    mkdir -p bin
    tar xJf qemu-${{ variables.QVER }}-bin.tar.xz -C bin
  condition: eq(variables.QEMU_CACHE_RESTORED, 'true')
  displayName: Extract QEMU cache
- script: |
    set -e
    git clone -b v${{ variables.QVER }} --depth 1 https://github.com/qemu/qemu.git
    pushd qemu
    mkdir build && cd build
    ../configure --target-list=riscv64-softmmu,x86_64-softmmu --audio-drv-list= --python=/usr/bin/python3 --disable-bzip2 --disable-curl --disable-curses --disable-docs --disable-gcrypt --disable-gnutls --disable-gtk --disable-guest-agent --disable-kvm --disable-libssh --disable-libusb --disable-libxml2 --disable-live-block-migration --disable-lzo --disable-mpath --disable-nettle --disable-numa --disable-opengl --disable-rdma --disable-replication --disable-sdl --disable-snappy --disable-spice --disable-tpm --disable-usb-redir --disable-vhost-crypto --disable-vhost-net --disable-vhost-scsi --disable-vhost-user --disable-vhost-vsock --disable-virglrenderer --disable-vnc --disable-vnc-jpeg --disable-vnc-png --disable-vnc-sasl --disable-xen --disable-debug-mutex --disable-debug-info --disable-debug-tcg
    make -j$(($(nproc) + 1)) qemu-img
    make -j$(($(nproc) + 1)) -C x86_64-softmmu qemu-system-x86_64
    make -j$(($(nproc) + 1)) -C riscv64-softmmu qemu-system-riscv64
    popd
    mkdir -p bin
    mv $(realpath qemu/build/qemu-img) bin/
    mv $(realpath qemu/build/x86_64-softmmu/qemu-system-x86_64) bin/
    mv $(realpath qemu/build/riscv64-softmmu/qemu-system-riscv64) bin/
    #because we performed a cache request for this tarball, it will automatically be cached for us at the end of the run
    tar cJf qemu-${{ variables.QVER }}-bin.tar.xz -C bin .
  condition: eq(variables.QEMU_CACHE_RESTORED, 'false')
  displayName: 'Build QEMU for RISC-V and x86_64'
- script: |
    export PATH=$(realpath bin):$PATH
    cd src/mainboard/sifive/hifive
    PAYLOAD_A=../../../../payloads/src/external/simple/testtesttest timeout 30s make run | tee serial
    grep TESTTESTTEST serial
  displayName: 'RISC-V SiFive board QEMU Test'
- script: |
    export PATH=$(realpath bin):$PATH
    cd src/mainboard/emulation/qemu-riscv
    timeout 30s make run | tee serial
    grep "Running payload" serial
  displayName: 'RISC-V QEMU Virt board QEMU Test'
- script: |
    export PATH=$(realpath bin):$PATH
    cd src/mainboard/emulation/qemu-q35
    timeout 30s make run | tee serial
    grep "PAYLOAD_SEGMENT_BAD" serial
  displayName: 'x86 q35 board QEMU Test'
